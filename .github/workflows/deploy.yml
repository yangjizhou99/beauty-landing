name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # 允许手动触发部署
  workflow_dispatch:

# 设置GITHUB_TOKEN权限
permissions:
  contents: read
  pages: write
  id-token: write

# 确保只有一个部署作业同时运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 安装依赖
        run: npm install
        
      - name: 构建项目
        run: npm run build
        env:
          NODE_ENV: production
          GITHUB_ACTIONS: true
        
      - name: 验证构建产物
        run: |
          echo "检查构建产物目录结构:"
          ls -la out/
          echo "检查图片文件:"
          ls -la out/images/ || echo "images目录不存在"
          ls -la out/images/portfolio/ || echo "portfolio目录不存在"
          ls -la out/images/services/ || echo "services目录不存在"
          echo "检查特定图片文件是否存在:"
          find out/ -name "*demo*" -type f || echo "没有找到demo文件"
          echo "检查所有图片文件:"
          find out/ -name "*.jpg" -o -name "*.webp" -o -name "*.svg" -o -name "*.png" | head -20
          echo "检查文件大小:"
          find out/ -name "*demo*" -type f -exec ls -lh {} \;
        
      - name: 设置Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true
        
      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
